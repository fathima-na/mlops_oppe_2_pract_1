name: Continuous Deployment

on:
  workflow_dispatch:
  pull_request:
    branches: main

permissions:
  contents: read
  pull-requests: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Authenticate with GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: "gke-gcloud-auth-plugin"

    - name: Authenticate to GKE cluster
      uses: google-github-actions/get-gke-credentials@v2
      with:
        cluster_name:  ${{ secrets.GKE_CLUSTER }}
        location: ${{ secrets.GKE_ZONE }}

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Build and Push Docker Image to Artifact Registry
      run: |
        docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/oppe2-pract-repo/api:latest .
        docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/oppe2-pract-repo/api:latest
        
    - name: Deploy to GKE
      run: |
        kubectl apply -f k8/deployment.yml
        kubectl apply -f k8/service.yml
        kubectl apply -f k8/hpa.yml
        kubectl rollout status deployment/api > report.md
        
    - name: Install wrk
      run: |
        sudo apt-get update
        sudo apt-get install -y wrk

    - name: Run Load Test with wrk
      run: |
        API_URL=$(kubectl get service api -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "API_URL=http://$API_URL:80"
        # echo "API_URL=http://$API_URL:80" >> $GITHUB_ENV
        echo "Running load test on predict"
        echo 'wrk -t4 -c100 -d30s --latency -s post.lua $API_URL/predict'
        wrk -t4 -c100 -d30s --latency -s post.lua http://$API_URL:80/predict
 
  robustness:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Setup Python
      run: |
          python -m venv venv
          source venv/bin/activate
          pip install evidently pandas scikit-learn mlflow
    - name: Run Robustness Tests
      run: |
        source venv/bin/activate
        python src/poison.py

    - name: Upload Evidently HTML Reports
      uses: actions/upload-artifact@v4
      with:
        name: robustness-reports
        path: robustness_reports/*.html
    
    # - name: Setup CML
    #   uses: iterative/setup-cml@v2

    # - name: Comment results with CML
    #   env:
    #     REPO_TOKEN: ${{ secrets.PAT }}
    #   run: |
    #     echo "API deployed to Kubernetes using Artifact Registry." >> report.md
    #     kubectl get pods >> report.md
    #     cml comment update --publish report.md
        

